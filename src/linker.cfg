#=============================================================================#
# Copyright 2022 Matthew D. Steele <mdsteele@alum.mit.edu>                    #
#                                                                             #
# This file is part of Annalog.                                               #
#                                                                             #
# Annalog is free software: you can redistribute it and/or modify it under    #
# the terms of the GNU General Public License as published by the Free        #
# Software Foundation, either version 3 of the License, or (at your option)   #
# any later version.                                                          #
#                                                                             #
# Annalog is distributed in the hope that it will be useful, but WITHOUT ANY  #
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS   #
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more      #
# details.                                                                    #
#                                                                             #
# You should have received a copy of the GNU General Public License along     #
# with Annalog.  If not, see <http://www.gnu.org/licenses/>.                  #
#=============================================================================#

# NES memory layout.  See https://www.nesdev.org/wiki/CPU_memory_map and
# https://www.nesdev.org/wiki/INES.
MEMORY {
  # RAM (separated into pages, to help control layout):
  ZP:    start=$0000, size=$0100, type=rw, file="";
  STACK: start=$0100, size=$0100, type=rw, file="";
  RAM_2: start=$0200, size=$0100, type=rw, file="";
  RAM_3: start=$0300, size=$0100, type=rw, file="";
  RAM_4: start=$0400, size=$0100, type=rw, file="";
  RAM_5: start=$0500, size=$0100, type=rw, file="";
  RAM_6: start=$0600, size=$0100, type=rw, file="";
  RAM_7: start=$0700, size=$0100, type=rw, file="";
  SRAM:  start=$6000, size=$2000, type=rw, file="";
  # The NES 2.0 ROM file header:
  HDR: start=$0000, size=$0010, type=ro, file=%O, fill=yes;
  # Program data (separated into swappable and fixed banks for MMC3):
  PRGC_00: bank=$00, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_01: bank=$01, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRGC_02: bank=$02, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_03: bank=$03, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRGC_04: bank=$04, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_05: bank=$05, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRGC_06: bank=$06, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_07: bank=$07, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRGC_08: bank=$08, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_09: bank=$09, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRGC_0A: bank=$0a, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_0B: bank=$0b, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRGC_0C: bank=$0c, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_0D: bank=$0d, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRGC_0E: bank=$0e, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_0F: bank=$0f, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRGC_10: bank=$10, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_11: bank=$11, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRGC_12: bank=$12, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_13: bank=$13, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRGC_14: bank=$14, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_15: bank=$15, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRGC_16: bank=$16, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_17: bank=$17, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRGC_18: bank=$18, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_19: bank=$19, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRGC_1A: bank=$1a, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_1B: bank=$1b, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRGC_1C: bank=$1c, start=$c000, size=$2000, type=ro, file=%O, fill=yes;
  PRGA_1D: bank=$1d, start=$a000, size=$2000, type=ro, file=%O, fill=yes;
  PRG8:              start=$8000, size=$2000, type=ro, file=%O, fill=yes;
  PRGE:              start=$e000, size=$2000, type=ro, file=%O, fill=yes;
  # Character (graphics) data (separated into swappable 1k/2k banks for MMC3).
  CHR1_00: bank=$00, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_01: bank=$01, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_02: bank=$02, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_03: bank=$03, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_04: bank=$04, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_05: bank=$05, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_06: bank=$06, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_07: bank=$07, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_08: bank=$08, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_09: bank=$09, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_0A: bank=$0a, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_0B: bank=$0b, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_0C: bank=$0c, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_0D: bank=$0d, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_0E: bank=$0e, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_0F: bank=$0f, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_10: bank=$10, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_11: bank=$11, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_12: bank=$12, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_13: bank=$13, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_14: bank=$14, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_15: bank=$15, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_16: bank=$16, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_17: bank=$17, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_18: bank=$18, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_19: bank=$19, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_1A: bank=$1a, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_1B: bank=$1b, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_1C: bank=$1c, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_1D: bank=$1d, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_1E: bank=$1e, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_1F: bank=$1f, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_20: bank=$20, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_21: bank=$21, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_22: bank=$22, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_23: bank=$23, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_24: bank=$24, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_25: bank=$25, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_26: bank=$26, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_27: bank=$27, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_28: bank=$28, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_29: bank=$29, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_2A: bank=$2a, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_2B: bank=$2b, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_2C: bank=$2c, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_2D: bank=$2d, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_2E: bank=$2e, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_2F: bank=$2f, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_30: bank=$30, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_31: bank=$31, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_32: bank=$32, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_33: bank=$33, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_34: bank=$34, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_35: bank=$35, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_36: bank=$36, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_37: bank=$37, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_38: bank=$38, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_39: bank=$39, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_3A: bank=$3a, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_3B: bank=$3b, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_3C: bank=$3c, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_3D: bank=$3d, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_3E: bank=$3e, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR1_3F: bank=$3f, start=$0000, size=$0400, type=ro, file=%O, fill=yes;
  CHR2_40: bank=$40, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_42: bank=$42, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_44: bank=$44, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_46: bank=$46, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_48: bank=$48, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_4A: bank=$4a, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_4C: bank=$4c, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_4E: bank=$4e, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_50: bank=$50, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_52: bank=$52, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_54: bank=$54, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_56: bank=$56, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_58: bank=$58, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_5A: bank=$5a, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_5C: bank=$5c, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_5E: bank=$5e, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_60: bank=$60, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_62: bank=$62, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_64: bank=$64, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_66: bank=$66, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_68: bank=$68, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_6A: bank=$6a, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_6C: bank=$6c, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_6E: bank=$6e, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_70: bank=$70, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_72: bank=$72, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_74: bank=$74, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_76: bank=$76, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_78: bank=$78, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_7A: bank=$7a, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_7C: bank=$7c, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
  CHR2_7E: bank=$7e, start=$0000, size=$0800, type=ro, file=%O, fill=yes;
}

# Segments for this particular NES ROM.
SEGMENTS {
  ZEROPAGE: load=ZP, type=zp;
  RAM_PpuTransfer: load=STACK, type=bss, start=$0100;
  RAM_Oam:      load=RAM_2, type=bss, align=$100;
  RAM_Actor:    load=RAM_3, type=bss;
  RAM_Platform: load=RAM_3, type=bss;
  RAM_Console:  load=RAM_4, type=bss;
  RAM_Machine:  load=RAM_4, type=bss;
  RAM_Menu:     load=RAM_4, type=bss;
  RAM_Device:   load=RAM_4, type=bss;
  RAM_Audio:    load=RAM_5, type=bss;
  RAM_Room:     load=RAM_6, type=bss;
  SRAM: load=SRAM, type=bss;
  HEADER: load=HDR, type=ro;
  # Swappable-bank PRG segments:
  PRGC_Core:         load=PRGC_00, type=ro;
  PRGC_Crypt:        load=PRGC_02, type=ro;
  PRGC_Factory:      load=PRGC_04, type=ro;
  PRGC_Garden:       load=PRGC_06, type=ro;
  PRGC_Lava:         load=PRGC_08, type=ro;
  PRGC_Mermaid:      load=PRGC_0A, type=ro;
  PRGC_Mine:         load=PRGC_0C, type=ro;
  PRGC_Prison:       load=PRGC_0E, type=ro;
  PRGC_Sewer:        load=PRGC_10, type=ro;
  PRGC_Shadow:       load=PRGC_12, type=ro;
  PRGC_Temple:       load=PRGC_14, type=ro;
  PRGC_Town:         load=PRGC_16, type=ro;
  PRGA_Reset:        load=PRGA_01, type=ro;
  PRGA_Actor:        load=PRGA_03, type=ro;
  PRGA_Breaker:      load=PRGA_05, type=ro;
  PRGA_Dialog:       load=PRGA_07, type=ro;
  PRGA_Fade:         load=PRGA_09, type=ro;
  PRGA_Machine:      load=PRGA_0B, type=ro;
  PRGA_Pause:        load=PRGA_0D, type=ro;
  PRGA_Upgrade:      load=PRGA_0F, type=ro;
  PRGA_Avatar:       load=PRGA_11, type=ro;
  PRGA_Console:      load=PRGA_13, type=ro;
  PRGA_Objects:      load=PRGA_15, type=ro;
  PRGA_Room:         load=PRGA_17, type=ro;
  PRGA_Terrain:      load=PRGA_19, type=ro;
  PRGA_Title:        load=PRGA_1B, type=ro;
  # Fixed-bank PRG segments:
  PRG8:              load=PRG8,    type=ro;
  PRGE_Reset:        load=PRGE,    type=ro;
  PRGE_Nmi:          load=PRGE,    type=ro;
  PRGE_Irq:          load=PRGE,    type=ro;
  PRGE_Vector:       load=PRGE,    type=ro, start=$fffa;
  # Single-bank CHR segments:
  CHR_BgFontUpper:   load=CHR1_00, type=ro;
  CHR_BgFontLower01: load=CHR1_01, type=ro;
  CHR_BgFontLower02: load=CHR1_02, type=ro;
  CHR_BgFontLower03: load=CHR1_03, type=ro;
  CHR_BgFontLower04: load=CHR1_04, type=ro;
  CHR_BgFontLower05: load=CHR1_05, type=ro;
  CHR_BgFontLower06: load=CHR1_06, type=ro;
  CHR_BgFontLower07: load=CHR1_07, type=ro;
  CHR_BgFontLower08: load=CHR1_08, type=ro;
  CHR_BgFontLower09: load=CHR1_09, type=ro;
  CHR_BgFontLower0A: load=CHR1_0A, type=ro;
  CHR_BgFontLower0B: load=CHR1_0B, type=ro;
  CHR_BgFontLower0C: load=CHR1_0C, type=ro;
  CHR_BgCrypt:       load=CHR1_20, type=ro;
  CHR_BgFactory:     load=CHR1_21, type=ro;
  CHR_BgGarden:      load=CHR1_22, type=ro;
  CHR_BgHut:         load=CHR1_23, type=ro;
  CHR_BgIndoors:     load=CHR1_24, type=ro;
  CHR_BgLava:        load=CHR1_25, type=ro;
  CHR_BgMermaid:     load=CHR1_26, type=ro;
  CHR_BgMine:        load=CHR1_27, type=ro;
  CHR_BgMinimap:     load=CHR1_28, type=ro;
  CHR_BgOutbreak:    load=CHR1_29, type=ro;
  CHR_BgOutdoors:    load=CHR1_2A, type=ro;
  CHR_BgPause:       load=CHR1_2B, type=ro;
  CHR_BgPrison:      load=CHR1_2C, type=ro;
  CHR_BgSewer:       load=CHR1_2D, type=ro;
  CHR_BgTemple:      load=CHR1_2E, type=ro;
  CHR_BgTitle:       load=CHR1_2F, type=ro;
  CHR_BgAnim0:       load=CHR1_38, type=ro;
  CHR_BgAnim1:       load=CHR1_39, type=ro;
  CHR_BgAnim2:       load=CHR1_3A, type=ro;
  CHR_BgAnim3:       load=CHR1_3B, type=ro;
  CHR_BgAnim4:       load=CHR1_3C, type=ro;
  CHR_BgAnim5:       load=CHR1_3D, type=ro;
  CHR_BgAnim6:       load=CHR1_3E, type=ro;
  CHR_BgAnim7:       load=CHR1_3F, type=ro;
  # Double-bank CHR segments:
  CHR_ObjAnnaNormal: load=CHR2_50, type=ro;
  CHR_ObjAnnaFlower: load=CHR2_52, type=ro;
  CHR_ObjCrypt:      load=CHR2_60, type=ro;
  CHR_ObjFactory:    load=CHR2_62, type=ro;
  CHR_ObjGarden:     load=CHR2_64, type=ro;
  CHR_ObjLava:       load=CHR2_66, type=ro;
  CHR_ObjMermaid:    load=CHR2_68, type=ro;
  CHR_ObjMine:       load=CHR2_6A, type=ro;
  CHR_ObjPause:      load=CHR2_6C, type=ro;
  CHR_ObjPrison:     load=CHR2_6E, type=ro;
  CHR_ObjSewer:      load=CHR2_70, type=ro;
  CHR_ObjTemple:     load=CHR2_72, type=ro;
  CHR_ObjTownsfolk:  load=CHR2_74, type=ro;
}
